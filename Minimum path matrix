class Solution {
    public int minPathSum(int[][] arr) {
        int m=arr.length;
        int n=arr[0].length;
        int dp[][]=new int[m][n];
        dp[0][0]=arr[0][0];
        for(int i=1;i<arr.length;i++)
        {
            dp[i][0]=dp[i-1][0]+arr[i][0];
        }
        for(int j=1;j<n;j++)
        {
            dp[0][j]=dp[0][j-1]+arr[0][j];
        }
        for(int i=1;i<arr.length;i++)
        {
            for(int j=1;j<n;j++)
            {
                dp[i][j]=Math.min(dp[i-1][j],dp[i][j-1])+arr[i][j];
            }
        }
        return  dp[arr.length-1][n-1];
        
    }
    public  void main(String[] args)
    {
        Scanner sc=new Scanner(System.in);
        int arr[][]=new int[200][200];
        for(int i=0;i<200;i++)
        {
            for(int j=0;j<200;j++)
            {
                arr[i][j]=sc.nextInt();
            }
        }
       System.out.print(minPathSum(arr));
    }
}
