import java.util.*;
class node
{
    int data;
    node left;
    node right;
    node(int data)
    {
        this.data = data;
    }
}

class Insert
{
    node ins(node root, int data)
    {
        if(root == null)
        {
            return new node(data);
        }
        if(root.data<data) 
        {
            root.right = ins(root.right, data);
        }
        else
        {
            root.left = ins(root.left, data);
        }
        return root;
    }
    
    node del(node root, int data)
    {
        if(root==null)
        {
            return null;
        }
        if(data > root.data)
        {
            root.right = del(root.right, data);
            return root;
        }
        else if(data < root.data)
        {
            root.left = del(root.left, data);
            return root;
        }
        else
        {
            if(root.left==null && root.right==null)
            {
                return null;
            }
            else if(root.left==null)
            {
                return root.right;
            }
            else if(root.right==null)
            {
                return root.left;
            }
            else
            {
                node t = root.right;
                while(t.left!=null)
                {
                    t = t.left;
                    root.data = t.data;
                    root.right = del(root.right, t.data);
                }
            }
        }
        return root;
    }
    
    void post(node root)     //postorder
    {
        if(root == null)
            return;
        post(root.left);
        post(root.right);
        System.out.print(root.data+" ");   
    }
}

class Main
{
    public static void main(String[] args)
    {
        Insert inn = new Insert();
        Scanner sc = new Scanner(System.in);
        String str=sc.nextLine();
        String ch[]=str.split(" ");
        node root = null;
        for(int i=0;i<ch.length;i++)
        {
            int data =Integer.parseInt(ch[i]);
            root=inn.ins(root, data);
        }
        int d=sc.nextInt();
        inn.del(root,d);
        inn.post(root);
    }
}
